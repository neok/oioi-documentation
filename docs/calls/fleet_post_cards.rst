.. highlight:: js

.. _calls-fleetpostcards-docs:

Fleet Post Cards
================

Fleet Post Cards call is used for creation of new Charging Key orders for Fleet Members.
After initial request from CPO to EMP. Fleet Cards with changes will be sent back to CPO over OIOI confirming status change.
CPOs should implement their own OIOI endpoint for receiving this Fleet Cards updates.
Status sent with the card represents the action required from CPO to EMP or vice-versa.

| ``"NEW_REQUEST"``: This is a request of a new card. Sent by CPO.
| ``"EVCO_REQUEST"``: This is a request for EVCO ID generated by EMP in case card is issued by 3rd party issuer. Sent by CPO.
| ``"REQUEST_RECEIVED``": Card request is received by EMP. Sent by EMP.
| ``"REQUEST_ACCEPTED"``: Card request is accepted by EMP. Sent by EMP.
| ``"REQUEST_REJECTED"``: Card request is rejected by EMP. Sent by EMP.
| ``"OPERATIONAL"``: Card request is completed by EMP and card is operational. Sent by EMP.
| ``"REQUEST_TO_BLOCK"``: EMP is requested to block operational card or the card in the process of issuing. Sent by CPO.
| ``"REQUEST_TO_UNBLOCK"``: EMP is requested to unblock blocked card. Sent by CPO.
| ``"BLOCKED"``: Card is blocked. Sent by EMP.


Request
-------

``"fleet-post-cards"`` identifies the call as a fleet-post-card call.

Fields
~~~~~~
.. note:: Depending on the request, to EMP from CPO or from CPO to EMP, some fields are optional.

fleet-cards
    array of fleet card objects

    fm-card-uid
        Fleet card unique identifier. Provided by CPO. (int)
    fleet-member-uid
        Fleet Member unique identifier. Provided by CPO. (int)
    evco-id (optional)
        EVCO ID of this card. Provided by EMP. (string; length 20)
    rfid (optional)
        RFID code of the card. If this is EVCO_REQUEST this field is required and provided by CPO, if not it will be provided by EMP on after card is issued. (string; length 20)
    visual-id (optional)
        Visual ID printed on the card. In case of 3rd party issuer, this is optionally provided by CPO. (string; length 64)
    issuer (optional)
        MSP code of the party that issued the card. This is used for EVCO_REQUEST when issuer is 3rd party. Provided by CPO. (string; length 5)
    card-status
        One of the possible ``"NEW_REQUEST", "EVCO_REQUEST", "REQUEST_RECEIVED", "REQUEST_ACCEPTED", "REQUEST_REJECTED", "OPERATIONAL", "REQUEST_TO_BLOCK", "REQUEST_TO_UNBLOCK", "BLOCKED"`` (string)
    request-date (optional)
        Date/time when card shall be delivered to fleet member. Provided by CPO. (string; format RFC3339 ``"2016-05-09T04:08:06+02:00"``)
    activation-date (optional)
        Date/time when card becomes active. Provided by EMP. (string; format RFC3339 ``"2016-05-09T04:08:06+02:00"``)
    expiration-date (optional)
        Datetime when card expires.  Provided by EMP. (string; format RFC3339 ``"2016-05-09T04:08:06+02:00"``)


partner-identifier
    The partner identifier of the owner of this fleet. (string)
    See also :ref:`partner identifier <glossary-partner-identifier>`

Response
--------

HTTP Status codes
~~~~~~~~~~~~~~~~~

200 OK
    The request was processed successfully.

Result codes
~~~~~~~~~~~~
0
    Success
211
    Invalid partner identifier

Examples
--------

Request::

    {
        "fleet-post-cards": {
            "fleet-cards": [
                {
                    "fm-card-uid": 23,
                    "fleet-member-uid": 35,
                    "card-status": "NEW_REQUEST",
                    "requested-date": "2018-01-01T10:00:00+00:00"

                },
                {
                    "fm-card-uid": 25,
                    "fleet-member-uid": 31,
                    "card-status": "EVCO_REQUEST",
                    "requested-date": "2018-01-01T10:00:00+00:00",
                    "rfid": "00001111",
                    "issuer": "DE*8PS",
                    "visual-id": "testtest"

                }
            ],
            "partner-identifier": "x9iujs7y5kslISuqw"
        }
    }

Successful Response::

    {
        "fleet-cards": {
            "processed": 2
        },
        "result": {
            "code": 0,
            "message": "Success."
        }
    }

